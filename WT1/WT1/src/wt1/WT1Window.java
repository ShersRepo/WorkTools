/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wt1;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.Window;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.awt.dnd.DropTargetListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import wt1.Customers.Customers;
import wt1.Descriptions.Descriptions;
import wt1.DefaultLocations.*;
import javax.swing.BoxLayout;
import javax.swing.DropMode;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author sher-
 */
public class WT1Window extends javax.swing.JFrame {

    /**
     * Creates new form WT1Window
     */
    public WT1Window() throws IOException {
        initComponents();
        setMyComponents();
        textField1.setVisible(false);
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        
        String[] allCustomers = new Customers().getCustomers();
        allCustomers = new Customers().sortArrayToMostRecent(allCustomers);
        String[] allDescriptions = new Descriptions().getDescriptions();
        
        jComboBox1.setModel(new DefaultComboBoxModel<>(allCustomers));
        jComboBox2.setModel(new DefaultComboBoxModel<>(allDescriptions));
        String printLocation = printDepartmentDefault.getLocationFile();  
        String internalLocation = internalDepartmentDefault.getLocationFile();
        jLabel6.setText("File will save in "+ printLocation);
        jLabel10.setText("Default Location : "+ internalLocation);
        jLabel5.setText("");
        jButton5.doClick();
        jCheckBox8.setSelected(true);
        jRadioButton1.setSelected(true);
        jRadioButton1.doClick();
        jLabel8.setText("");
        jLabel9.setText("");
        //enableDragAndDrop(printLocation);
    }
    
    public void setMyComponents(){
        //jLabel5.setForeground(Color.blue);
    }
    
    @SuppressWarnings("empty-statement")
    public void enableDragAndDrop(String path){
        FileTransfer dragTransfer = new FileTransfer(path);
        DropTarget dropTarget = new DropTarget(jList1, dragTransfer);
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        textField1 = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 701));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 85, 320, -1));

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel1.setText("Job Number");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 130, -1, -1));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 125, 196, -1));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel2.setText("Customer");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 168, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 166, 196, -1));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jLabel3.setText("Description");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 206, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 204, 196, -1));

        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });
        getContentPane().add(textField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 242, 206, 23));

        jButton1.setText("Save Description");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 242, -1, -1));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Cut");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(237, 283, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("SUV");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 283, -1, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Plan");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 283, -1, -1));

        jCheckBox6.setText("Proofs");
        jCheckBox6.setName("Proofs"); // NOI18N
        getContentPane().add(jCheckBox6, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 253, -1, -1));

        jCheckBox5.setText("Guides");
        jCheckBox5.setName("Guides"); // NOI18N
        getContentPane().add(jCheckBox5, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 230, -1, -1));

        jCheckBox4.setText("Do Not Use");
        jCheckBox4.setName("Do Not Use"); // NOI18N
        getContentPane().add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 207, -1, -1));

        jCheckBox3.setText("Printed From");
        jCheckBox3.setName("Printed From"); // NOI18N
        getContentPane().add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 184, -1, -1));

        jCheckBox2.setText("Working Files");
        jCheckBox2.setName("Working Files"); // NOI18N
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 161, -1, -1));

        jCheckBox1.setText("Customer");
        jCheckBox1.setName("Customer"); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 138, -1, -1));

        jCheckBox7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCheckBox7.setText("Select All");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox7, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 117, -1, -1));

        jCheckBox8.setText("Auto Open");
        getContentPane().add(jCheckBox8, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 294, -1, -1));

        jLabel4.setText("Select subfolders to create");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 85, 149, -1));

        jButton2.setLabel("Open Folder");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("File saved here : ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 440, 20));

        jButton4.setText("Select Location & Create");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, -1, 39));

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        jLabel7.setText("Internal Jobs");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, 34));

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 500, 245, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 1260, 14));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 550, 290, -1));

        jButton3.setText("Select Folder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 31));

        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 96, 31));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel9.setText("jLabel8");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 580, 436, -1));

        jButton6.setText("Create Folder");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 294, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel10.setText("jLabel8");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 832, -1));

        jButton7.setText("Create");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 490, 87, 39));

        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(699, 85, -1, 344));

        jLabel11.setFont(new java.awt.Font("Vladimir Script", 0, 48)); // NOI18N
        jLabel11.setText("Work Tools");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 222, -1));

        jLabel12.setText("V 1.3.0");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 550, 54, -1));

        jMenu2.setText("Preferences");

        jMenuItem5.setText("Set Default Location");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem4.setText("Set Internal Job Default Location");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem6.setText("Manage Customers");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Default Directory Selector");
        fileChooser.setFileSelectionMode((JFileChooser.DIRECTORIES_ONLY));
        int selectedFile = fileChooser.showOpenDialog(this);
        String newLocation = "";
        if (selectedFile == JFileChooser.APPROVE_OPTION){
            newLocation = fileChooser.getSelectedFile().toString();
        }
        printDepartmentDefault.setLocationFile(newLocation);
        try {
            jLabel6.setText("File will save in "+ printDepartmentDefault.getLocationFile());
            jLabel5.setText("Default Location has changed");
            
        } catch (IOException ex) {
            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String descriptionToAdd = textField1.getText();
        if(!descriptionToAdd.isEmpty()){
            Descriptions description = new Descriptions();
            int cancel = JOptionPane.showConfirmDialog(jMenuItem1, "You are adding "+descriptionToAdd+", are you sure?","Adding --> "+descriptionToAdd,
                JOptionPane.YES_NO_OPTION);
            if(cancel == 1){
            } else if (cancel == 0){
                description.addNewDescription(descriptionToAdd);
                JOptionPane.showMessageDialog(this, descriptionToAdd + " has been added");
                jLabel5.setText("New Description Added");
                try {
                    String[] allDescriptions = new Descriptions().getDescriptions();
                    jComboBox2.setModel(new DefaultComboBoxModel<>(allDescriptions));
                } catch (IOException ex) {
                    Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        } else JOptionPane.showMessageDialog(this, "You must enter a description to add to the system");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed

    }//GEN-LAST:event_textField1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedItem().equals("Other")){
            textField1.setVisible(true);
            jButton1.setVisible(true);
        } else{
            textField1.setVisible(false);
            jButton1.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        jRadioButton3.setActionCommand("Cut");
        jCheckBox1.setSelected(true);
        jCheckBox2.setSelected(true);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jRadioButton2.setActionCommand("SUV");
        jCheckBox1.setSelected(true);
        jCheckBox2.setSelected(true);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton1.setActionCommand("Plan");
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(true);
        jCheckBox7.setSelected(false);
        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        if(jCheckBox7.isSelected()){
            jCheckBox1.setSelected(true);
            jCheckBox2.setSelected(true);
            jCheckBox3.setSelected(true);
            jCheckBox4.setSelected(true);
            jCheckBox5.setSelected(true);
            jCheckBox6.setSelected(true);
        }

        if(!jCheckBox7.isSelected()){
            jCheckBox1.setSelected(false);
            jCheckBox2.setSelected(false);
            jCheckBox3.setSelected(false);
            jCheckBox4.setSelected(false);
            jCheckBox5.setSelected(false);
            jCheckBox6.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String fileLocation = printDepartmentDefault.getLocationFile();
            File fileToOpen = new File(fileLocation+"\\"+folderOpener);
                Desktop desktopViewer = null;
                if(Desktop.isDesktopSupported()){
                    desktopViewer = Desktop.getDesktop();
                    try {
                        desktopViewer.open(fileToOpen);
                    } catch (IOException ex) {
                        Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, "Could not open file", ex);
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String internalJobLocation = jTextField2.getText();
        if(!internalJobLocation.isEmpty()){
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Choose Internal Job Location");
            fileChooser.setFileSelectionMode((JFileChooser.DIRECTORIES_ONLY));
            int selectedFile = fileChooser.showOpenDialog(this);
            String newLocation = "";
            if (selectedFile == JFileChooser.APPROVE_OPTION){
                newLocation = fileChooser.getSelectedFile().toString();
                File newInternalJob = new File(newLocation+"\\"+internalJobLocation);
                File workingFiles = new File(newLocation+"\\"+internalJobLocation+"\\Working Files");
                File doNotUseFile = new File(newLocation+"\\"+internalJobLocation+"\\Do Not Use");
                newInternalJob.mkdir();
                workingFiles.mkdir();
                doNotUseFile.mkdir();
                jLabel8.setText("Internal Job "+internalJobLocation+" saved in");
                jLabel9.setText("File saved here : " + newLocation);
                jTextField2.setText("");
            }
        } 
        else{
            JOptionPane.showMessageDialog(this, "You must enter a name of the job to save");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose Save Location");
        fileChooser.setFileSelectionMode((JFileChooser.DIRECTORIES_ONLY));
        int selectedFile = fileChooser.showOpenDialog(this);
        if (selectedFile == JFileChooser.APPROVE_OPTION){
            printLocation = fileChooser.getSelectedFile().toString();
            jLabel6.setText("File will save in " + printLocation);
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try { 
            printLocation = printDepartmentDefault.getLocationFile();
            jLabel6.setText("File will save in " + printLocation);
        } catch (IOException ex) {
            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, "Print Location File has not been set correctly", ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String jobNo = jTextField1.getText();
        String customer = (String) jComboBox1.getSelectedItem();
        String descriptionSelection = (String) jComboBox2.getSelectedItem();
        String description;
        if(descriptionSelection.equals("Other")){
            description = textField1.getText();
        } else description = (String) jComboBox2.getSelectedItem();
        String type = buttonGroup1.getSelection().getActionCommand();
        String folder = jobNo + "_" + customer + "_" + description + "_" + type;
        folderOpener = folder;
        File parentLocation = new File(printLocation+"\\"+folder);
        if(!parentLocation.exists()){
            parentLocation.mkdir();
            List<File> fileDirectories = new ArrayList<File>();
            if(jCheckBox1.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox1.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            if(jCheckBox2.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox2.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            if(jCheckBox3.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox3.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            if(jCheckBox4.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox4.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            if(jCheckBox5.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox5.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            if(jCheckBox6.isSelected()){
                File newFile = new File(printLocation+"\\"+folder+"\\"+jCheckBox6.getName());
                newFile.mkdir();
                fileDirectories.add(newFile);
            }
            jButton2.setVisible(true);
            jLabel5.setText("File is saved here -> " + printLocation+"\\"+folder);
            JOptionPane.showMessageDialog(this, folder + " has been saved");
            jTextField1.setText("");
            jRadioButton1.doClick();
            DefaultListModel<String> model = new DefaultListModel<>();
            Map<String, File> filePaths = new HashMap<String, File>();
            model.clear();
            filePaths.clear();
            for(File filesToAdd : fileDirectories){
                model.addElement(filesToAdd.getName());
                filePaths.put(filesToAdd.getName(), filesToAdd);
            }
            jList1.setFont(jList1.getFont().deriveFont(18.0f));
            jList1.setFixedCellHeight(36);
            jList1.setDropMode(DropMode.ON);
            jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            System.out.println(model);
            jList1.setModel(model);
            jList1.setEnabled(true);
            jList1.setDragEnabled(true);
            jList1.setSelectedIndex(0);
            jList1.requestFocusInWindow();
            jList1.grabFocus();
            DropTargetListener ft = new DropTargetListener() {
                @Override
                public void dragEnter(DropTargetDragEvent dtde) {
                    jList1.setSelectedIndex(0);
                }

                @Override
                public void dragOver(DropTargetDragEvent dtde) {
                    Point position = new Point(dtde.getLocation());
                    jList1.setSelectedIndex(jList1.locationToIndex(position));
                }

                @Override
                public void dropActionChanged(DropTargetDragEvent dtde) {
                }

                @Override
                public void dragExit(DropTargetEvent dte) {
                }

                @Override
                public void drop(DropTargetDropEvent dtde) {
                    InputStream input = null;
                    OutputStream output = null;
                    Transferable transferable = dtde.getTransferable();
                    if(dtde.isDataFlavorSupported(DataFlavor.javaFileListFlavor)){
                        dtde.acceptDrop(dtde.getDropAction());
                        try{
                            List<File> transferData = (List<File>) transferable.getTransferData(DataFlavor.javaFileListFlavor);
                            if(transferData != null && transferData.size()> 0){
                                for(File files : transferData){
                                    System.out.println(files.getAbsolutePath());
                                    System.out.println(jList1.getSelectedValue());
                                    DefaultLocator dl = new DefaultLocator(1);
                                    dl.getLocationFile();
                                    input = new FileInputStream(files.getAbsoluteFile());
                                    String filename = files.getName();
                                    output = new FileOutputStream(filePaths.get(jList1.getSelectedValue()).getAbsolutePath()+"\\"+filename);
                                    System.out.println(output);
                                    byte[] buffer = new byte[1024];
                                    int length;
                                    //copy the file content in bytes 
                                    while ((length = input.read(buffer)) > 0){
                                        output.write(buffer, 0, length);
                                    }
                                    input.close();
                                    output.close();
                                }
                                dtde.dropComplete(true);
                            }
                        } catch (UnsupportedFlavorException ex) {
                            Logger.getLogger(FileTransfer.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(FileTransfer.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else dtde.rejectDrop();
                }
            };
            jList1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                String filePath = "";
                @Override
                public void valueChanged(ListSelectionEvent event) {
//                    jList1.addMouseMotionListener(new MouseAdapter(){
//                        public void mouseMoved(MouseEvent e){
//                            Point point = new Point(e.getX(),e.getY());
//                            int index = jList1.locationToIndex(point);
//                            jList1.setSelectedValue(index ,true);
//                            if(index != -1){
//                                filePath = model.elementAt(index);
//                            }
//                            System.out.println(filePath);
//                            enableDragAndDrop(filePaths.get(filePath).getAbsolutePath());
//                        }
//                    });
//                }

                 /*   if(event.getValueIsAdjusting()){
                        filePath = jList1.getSelectedValue();
                        enableDragAndDrop(filePaths.get(filePath).getAbsolutePath());
                    } else enableDragAndDrop(filePaths.get(jList1.getSelectedValue()).getAbsolutePath());    */
                DropTarget drag = new DropTarget(jList1, ft);
            }
            });
            
            
            
        } else JOptionPane.showMessageDialog(this, "Job Already Exists");
                if (jCheckBox8.isSelected()){
                    Desktop desktopViewer = null;
                    if(Desktop.isDesktopSupported()){
                        desktopViewer = Desktop.getDesktop();
                        try {
                            desktopViewer.open(parentLocation);
                        } catch (IOException ex) {
                            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, "Could not open file", ex);
                        }
                    }
                }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
            String jobName = jTextField2.getText();
            if(!jobName.isEmpty()){
                try {
                    internalLocation = internalDepartmentDefault.getLocationFile();
                    File newInternalJob = new File(internalLocation+"\\"+jobName);
                    File workingFiles = new File(internalLocation+"\\"+jobName+"\\Working Files");
                    File doNotUseFile = new File(internalLocation+"\\"+jobName+"\\Do Not Use");
                    if(!newInternalJob.exists()){
                        newInternalJob.mkdir();
                        workingFiles.mkdir();
                        jLabel8.setText("Internal Job "+jobName+" saved");
                        jLabel9.setText("File saved here : " + internalLocation);
                        doNotUseFile.mkdir();
                        jTextField2.setText("");
                        
                    } else if(newInternalJob.exists()){
                        JOptionPane.showMessageDialog(this, "Job Already Exists");
                    }
                } catch (IOException ex) {
                    Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, "Could not locate the default location", ex);
                }
            } else JOptionPane.showMessageDialog(this, "You must enter an Internal Job Name");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Internal Job Default Directory Selector");
        fileChooser.setFileSelectionMode((JFileChooser.DIRECTORIES_ONLY));
        int selectedFile = fileChooser.showOpenDialog(this);
        String newLocation = "";
        if (selectedFile == JFileChooser.APPROVE_OPTION){
            newLocation = fileChooser.getSelectedFile().toString();
            internalDepartmentDefault.setLocationFile(newLocation);
            try {
            jLabel10.setText("File will save in "+ internalDepartmentDefault.getLocationFile());
            jLabel5.setText("Default Location has changed");
            } catch (IOException ex) {
                Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, "Could not find the internal job file location", ex);
            }
        }
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed
 
    
    
    
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        Customers customers = new Customers();
        try {
            JDialog frame = new JDialog();
            JSplitPane splitter = new JSplitPane();
            splitter.setResizeWeight(0.7);
            JPanel buttonPanel = new JPanel();
            GridBagConstraints setting = new GridBagConstraints();
            frame.setSize(450,350);
            frame.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
            frame.add(splitter);
            buttonPanel.setLayout(new GridBagLayout());
            
            JList customerList = new JList(customers.getCustomers());
            DefaultListModel<String> model = new DefaultListModel<>();
            for(String customer : customers.getCustomers()){
                model.addElement(customer);
            }
            customerList.setModel(model);
            customerList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            customerList.setLayoutOrientation(JList.VERTICAL_WRAP);
            JScrollPane scrollList = new JScrollPane(customerList);
            
            JButton addButton = new JButton();
            addButton.setText("Add");
            setting.fill = GridBagConstraints.HORIZONTAL;
            setting.gridx = 1;
            setting.gridy = 0;
            buttonPanel.add(addButton,setting);
              
            JButton editButton = new JButton();
            editButton.setText("Edit");
            setting.fill = GridBagConstraints.HORIZONTAL;
            setting.gridx = 0;
            setting.gridy = 0;
            buttonPanel.add(editButton,setting);
            
            JButton deleteButton = new JButton();
            deleteButton.setText("Delete");
            setting.fill = GridBagConstraints.HORIZONTAL;
            setting.gridx = 2;
            setting.gridy = 0;
            buttonPanel.add(deleteButton, setting);

            JTextField customerField = new JTextField();
            setting.fill = GridBagConstraints.HORIZONTAL;
            setting.gridx = 0;
            setting.gridy = 3;
            setting.ipadx = 200;
            buttonPanel.add(customerField,setting);
            

            splitter.setLeftComponent(scrollList);
            splitter.setRightComponent(buttonPanel);
            
            customerField.setSize(500, 25);
            deleteButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(customerList.getSelectedIndex() != -1){
                        try {
                            customers.removeCustomer(customerList.getSelectedIndex());
                            model.removeElementAt(customerList.getSelectedIndex());
                            String[] allCustomers = customers.getCustomers();
                            jComboBox1.setModel(new DefaultComboBoxModel<>(allCustomers));
                        } catch (IOException ex) {
                            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
                        } 
                    } else JOptionPane.showMessageDialog(frame, "You must select a customer from the list and enter a name", "Customer not selected", JOptionPane.ERROR_MESSAGE);
                }
            });
            editButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if(customerList.getSelectedIndex() != -1 && (!customerField.getText().isEmpty())){
                    try {
                        System.out.println(customerList.getSelectedIndex());
                        customers.editCustomer(customerList.getSelectedIndex(), customerField.getText());
                        model.setElementAt(customerField.getText(), customerList.getSelectedIndex());
                        String[] allCustomers = customers.getCustomers();
                        jComboBox1.setModel(new DefaultComboBoxModel<>(allCustomers));
                        customerField.setText("");
                        } catch (IOException ex) {
                            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else JOptionPane.showMessageDialog(frame, "You must select a customer from the list and enter a name", "Customer not selected", JOptionPane.ERROR_MESSAGE);
                }
            });
            addButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if((!customerField.getText().isEmpty())){
                        try {
                            customers.addNewCustomer(customerField.getText());
                            model.addElement(customerField.getText());
                            String[] allCustomers = customers.getCustomers();
                            jComboBox1.setModel(new DefaultComboBoxModel<>(allCustomers));
                            customerField.setText("");
                        } catch (IOException ex) {
                            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else JOptionPane.showMessageDialog(frame, "You must enter a name for the customer", "Invalid Name Entered", JOptionPane.ERROR_MESSAGE);
                }
            });
            customerList.addListSelectionListener((e) -> {
                customerField.setText(model.getElementAt(customerList.getSelectedIndex()));
            });

            
            frame.setVisible(rootPaneCheckingEnabled);
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            this.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    frame.setModalityType(Dialog.ModalityType.DOCUMENT_MODAL);
                    e.getWindow().dispose();
                    frame.dispose();
                }
            });
            
        } catch (IOException ex) {
            Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WT1Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WT1Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WT1Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WT1Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new WT1Window().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(WT1Window.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    DefaultLocator printDepartmentDefault = new DefaultLocator(1);
    DefaultLocator internalDepartmentDefault = new DefaultLocator(2);
    
    String printLocation = "";
    String internalLocation = "";
    String folderOpener = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables
}
